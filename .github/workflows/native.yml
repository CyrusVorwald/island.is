name: Native

on:
  # push:
  #   branches: [ mobile-app/** ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Select latest stable XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Use node 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Calculate cache key for node_modules
        id: calculate_node_modules_hash
        run: |
          PACKAGE_JSON_HASH=$(cat package.json | jq '{resolutions,dependencies,devDependencies}' | sha1sum -t | cut -f1 -d" ")
          echo "PACKAGE_JSON_HASH: $PACKAGE_JSON_HASH"
          export NODE_MODULES_HASH=${{ runner.os }}-${{ hashFiles('yarn.lock') }}-$PACKAGE_JSON_HASH
          echo "NODE_MODULES_HASH: $NODE_MODULES_HASH"
          echo "::set-output name=node-modules-hash::$NODE_MODULES_HASH"

      - name: Restore node_modules from cache
        id: node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ steps.calculate_node_modules_hash.outputs.node-modules-hash }}-yarn

      - name: Generate dotenv file
        run: cp .env.example .env
        working-directory: apps/native/app

      - name: Install NPM dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install

      - name: Install native NPM dependencies
        run: yarn install
        working-directory: apps/native

      - name: Symlink Nx dependencies
        run: |
          rm -rf apps/native/app/node_modules
          mkdir -p apps/native/app/node_modules/{@babel,@nrwl,@react-native-community}
          ln -s "$(pwd)/node_modules/@babel/runtime" "$(pwd)/apps/native/app/node_modules/@babel/runtime"
          ln -s "$(pwd)/node_modules/@react-native-community/cli-platform-ios" "$(pwd)/apps/native/app/node_modules/@react-native-community/cli-platform-ios"
          ln -s "$(pwd)/node_modules/@react-native-community/cli-platform-android" "$(pwd)/apps/native/app/node_modules/@react-native-community/cli-platform-android"
          ln -s "$(pwd)/node_modules/@nrwl/react-native" "$(pwd)/apps/native/app/node_modules/@nrwl/react-native"
          ln -s "$(pwd)/node_modules/hermes-engine" "$(pwd)/apps/native/app/node_modules/hermes-engine"
          ln -s "$(pwd)/node_modules/jsc-android" "$(pwd)/apps/native/app/node_modules/jsc-android"
          ln -s "$(pwd)/node_modules/react-native" "$(pwd)/apps/native/app/node_modules/react-native"
          echo "ZGVmYXVsdHMudXJsPWh0dHBzOi8vc2VudHJ5LmlvLwpkZWZhdWx0cy5vcmc9c29saWQtbW9iaWxlLXJ6CmRlZmF1bHRzLnByb2plY3Q9aXNsYW5kLWFwcC1kZW1vCmF1dGgudG9rZW49Nzk4OGY3YmM3N2Y5NGZhNDlhYmU3ODZjOGY4MzdmNzg0MTJlMmY1NzJiY2M0NDkxODQ0ODFjMTI3OTFiYTE4Mgo=" | base64 --decode > "$(pwd)/apps/native/app/ios/sentry.properties"

      - name: Install applesimutils
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Install Cocoapods
        run: pod install
        working-directory: apps/native/app/ios

      - name: Build native binary
        run: yarn detox:build:ios
        working-directory: apps/native

      - name: Run e2e tests
        run: yarn detox:test:ios
        working-directory: apps/native

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ios-e2e-artifacts
          path: apps/native/app-e2e/artifacts/
